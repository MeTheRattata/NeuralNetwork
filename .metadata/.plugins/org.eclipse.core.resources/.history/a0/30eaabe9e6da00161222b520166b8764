public class NeuralNetwork 
{
	Neuron[] hidden;
	Neuron[] output;
	double[] hiddenInput;
	double[] outputInput;
	double[] finalOutput;
	
	public NeuralNetwork(int numInput, int numHidden, int numOutput)
	{
		Neuron[] hidden = new Neuron[numHidden];
		for(int i = 0; i < hidden.length; i++)
			hidden[i] = new Neuron(numInput);
		Neuron[] output = new Neuron[numOutput];
		for(int i = 0; i < output.length; i++)
			output[i] = new Neuron(numHidden);
		outputInput = new double[numHidden];
		finalOutput = new double[numOutput];
	}
	
	public double[] forwardPropagate(String newInput)
	{
		hiddenInput = strToDoubleArray(newInput);
		for(int i = 0; i < hidden.length; i++)
			outputInput[i] = hidden[i].activate(hiddenInput);
		for(int i = 0; i < output.length; i++)
			finalOutput[i] = output[i].activate(outputInput);
		return finalOutput;
	}
	
	public double[] strToDoubleArray(String str)
	{
		double[] nums = new double[str.length()];
		for(int i = 0; i < str.length(); i++)
		{
			nums[i] = (double) str.charAt(i);
			System.out.println(nums[i] + " ");
		}
			
		return nums;
	}
}